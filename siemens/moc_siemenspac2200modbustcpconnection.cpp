/****************************************************************************
** Meta object code from reading C++ file 'siemenspac2200modbustcpconnection.h'
**
** Created by: The Qt Meta Object Compiler version 67 (Qt 5.15.2)
**
** WARNING! All changes made in this file will be lost!
*****************************************************************************/

#include <memory>
#include "autogenerated/siemenspac2200modbustcpconnection.h"
#include <QtCore/qbytearray.h>
#include <QtCore/qmetatype.h>
#if !defined(Q_MOC_OUTPUT_REVISION)
#error "The header file 'siemenspac2200modbustcpconnection.h' doesn't include <QObject>."
#elif Q_MOC_OUTPUT_REVISION != 67
#error "This file was generated using the moc from 5.15.2. It"
#error "cannot be used with the include files from this version of Qt."
#error "(The moc has changed too much.)"
#endif

QT_BEGIN_MOC_NAMESPACE
QT_WARNING_PUSH
QT_WARNING_DISABLE_DEPRECATED
struct qt_meta_stringdata_SiemensPAC2200ModbusTcpConnection_t {
    QByteArrayData data[62];
    char stringdata0[1309];
};
#define QT_MOC_LITERAL(idx, ofs, len) \
    Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len, \
    qptrdiff(offsetof(qt_meta_stringdata_SiemensPAC2200ModbusTcpConnection_t, stringdata0) + ofs \
        - idx * sizeof(QByteArrayData)) \
    )
static const qt_meta_stringdata_SiemensPAC2200ModbusTcpConnection_t qt_meta_stringdata_SiemensPAC2200ModbusTcpConnection = {
    {
QT_MOC_LITERAL(0, 0, 33), // "SiemensPAC2200ModbusTcpConnec..."
QT_MOC_LITERAL(1, 34, 16), // "reachableChanged"
QT_MOC_LITERAL(2, 51, 0), // ""
QT_MOC_LITERAL(3, 52, 9), // "reachable"
QT_MOC_LITERAL(4, 62, 23), // "checkReachabilityFailed"
QT_MOC_LITERAL(5, 86, 28), // "checkReachableRetriesChanged"
QT_MOC_LITERAL(6, 115, 21), // "checkReachableRetries"
QT_MOC_LITERAL(7, 137, 22), // "initializationFinished"
QT_MOC_LITERAL(8, 160, 7), // "success"
QT_MOC_LITERAL(9, 168, 14), // "updateFinished"
QT_MOC_LITERAL(10, 183, 17), // "endiannessChanged"
QT_MOC_LITERAL(11, 201, 26), // "ModbusDataUtils::ByteOrder"
QT_MOC_LITERAL(12, 228, 10), // "endianness"
QT_MOC_LITERAL(13, 239, 19), // "currentPowerChanged"
QT_MOC_LITERAL(14, 259, 12), // "currentPower"
QT_MOC_LITERAL(15, 272, 24), // "currentPowerReadFinished"
QT_MOC_LITERAL(16, 297, 26), // "totalEnergyConsumedChanged"
QT_MOC_LITERAL(17, 324, 19), // "totalEnergyConsumed"
QT_MOC_LITERAL(18, 344, 31), // "totalEnergyConsumedReadFinished"
QT_MOC_LITERAL(19, 376, 16), // "frequencyChanged"
QT_MOC_LITERAL(20, 393, 9), // "frequency"
QT_MOC_LITERAL(21, 403, 21), // "frequencyReadFinished"
QT_MOC_LITERAL(22, 425, 20), // "voltagePhaseAChanged"
QT_MOC_LITERAL(23, 446, 13), // "voltagePhaseA"
QT_MOC_LITERAL(24, 460, 25), // "voltagePhaseAReadFinished"
QT_MOC_LITERAL(25, 486, 20), // "voltagePhaseBChanged"
QT_MOC_LITERAL(26, 507, 13), // "voltagePhaseB"
QT_MOC_LITERAL(27, 521, 25), // "voltagePhaseBReadFinished"
QT_MOC_LITERAL(28, 547, 20), // "voltagePhaseCChanged"
QT_MOC_LITERAL(29, 568, 13), // "voltagePhaseC"
QT_MOC_LITERAL(30, 582, 25), // "voltagePhaseCReadFinished"
QT_MOC_LITERAL(31, 608, 20), // "currentPhaseAChanged"
QT_MOC_LITERAL(32, 629, 13), // "currentPhaseA"
QT_MOC_LITERAL(33, 643, 25), // "currentPhaseAReadFinished"
QT_MOC_LITERAL(34, 669, 20), // "currentPhaseBChanged"
QT_MOC_LITERAL(35, 690, 13), // "currentPhaseB"
QT_MOC_LITERAL(36, 704, 25), // "currentPhaseBReadFinished"
QT_MOC_LITERAL(37, 730, 20), // "currentPhaseCChanged"
QT_MOC_LITERAL(38, 751, 13), // "currentPhaseC"
QT_MOC_LITERAL(39, 765, 25), // "currentPhaseCReadFinished"
QT_MOC_LITERAL(40, 791, 25), // "currentPowerPhaseAChanged"
QT_MOC_LITERAL(41, 817, 18), // "currentPowerPhaseA"
QT_MOC_LITERAL(42, 836, 30), // "currentPowerPhaseAReadFinished"
QT_MOC_LITERAL(43, 867, 25), // "currentPowerPhaseBChanged"
QT_MOC_LITERAL(44, 893, 18), // "currentPowerPhaseB"
QT_MOC_LITERAL(45, 912, 30), // "currentPowerPhaseBReadFinished"
QT_MOC_LITERAL(46, 943, 25), // "currentPowerPhaseCChanged"
QT_MOC_LITERAL(47, 969, 18), // "currentPowerPhaseC"
QT_MOC_LITERAL(48, 988, 30), // "currentPowerPhaseCReadFinished"
QT_MOC_LITERAL(49, 1019, 9), // "Registers"
QT_MOC_LITERAL(50, 1029, 21), // "RegisterVoltagePhaseA"
QT_MOC_LITERAL(51, 1051, 21), // "RegisterVoltagePhaseB"
QT_MOC_LITERAL(52, 1073, 21), // "RegisterVoltagePhaseC"
QT_MOC_LITERAL(53, 1095, 21), // "RegisterCurrentPhaseA"
QT_MOC_LITERAL(54, 1117, 21), // "RegisterCurrentPhaseB"
QT_MOC_LITERAL(55, 1139, 21), // "RegisterCurrentPhaseC"
QT_MOC_LITERAL(56, 1161, 26), // "RegisterCurrentPowerPhaseA"
QT_MOC_LITERAL(57, 1188, 26), // "RegisterCurrentPowerPhaseB"
QT_MOC_LITERAL(58, 1215, 26), // "RegisterCurrentPowerPhaseC"
QT_MOC_LITERAL(59, 1242, 17), // "RegisterFrequency"
QT_MOC_LITERAL(60, 1260, 20), // "RegisterCurrentPower"
QT_MOC_LITERAL(61, 1281, 27) // "RegisterTotalEnergyConsumed"

    },
    "SiemensPAC2200ModbusTcpConnection\0"
    "reachableChanged\0\0reachable\0"
    "checkReachabilityFailed\0"
    "checkReachableRetriesChanged\0"
    "checkReachableRetries\0initializationFinished\0"
    "success\0updateFinished\0endiannessChanged\0"
    "ModbusDataUtils::ByteOrder\0endianness\0"
    "currentPowerChanged\0currentPower\0"
    "currentPowerReadFinished\0"
    "totalEnergyConsumedChanged\0"
    "totalEnergyConsumed\0totalEnergyConsumedReadFinished\0"
    "frequencyChanged\0frequency\0"
    "frequencyReadFinished\0voltagePhaseAChanged\0"
    "voltagePhaseA\0voltagePhaseAReadFinished\0"
    "voltagePhaseBChanged\0voltagePhaseB\0"
    "voltagePhaseBReadFinished\0"
    "voltagePhaseCChanged\0voltagePhaseC\0"
    "voltagePhaseCReadFinished\0"
    "currentPhaseAChanged\0currentPhaseA\0"
    "currentPhaseAReadFinished\0"
    "currentPhaseBChanged\0currentPhaseB\0"
    "currentPhaseBReadFinished\0"
    "currentPhaseCChanged\0currentPhaseC\0"
    "currentPhaseCReadFinished\0"
    "currentPowerPhaseAChanged\0currentPowerPhaseA\0"
    "currentPowerPhaseAReadFinished\0"
    "currentPowerPhaseBChanged\0currentPowerPhaseB\0"
    "currentPowerPhaseBReadFinished\0"
    "currentPowerPhaseCChanged\0currentPowerPhaseC\0"
    "currentPowerPhaseCReadFinished\0Registers\0"
    "RegisterVoltagePhaseA\0RegisterVoltagePhaseB\0"
    "RegisterVoltagePhaseC\0RegisterCurrentPhaseA\0"
    "RegisterCurrentPhaseB\0RegisterCurrentPhaseC\0"
    "RegisterCurrentPowerPhaseA\0"
    "RegisterCurrentPowerPhaseB\0"
    "RegisterCurrentPowerPhaseC\0RegisterFrequency\0"
    "RegisterCurrentPower\0RegisterTotalEnergyConsumed"
};
#undef QT_MOC_LITERAL

static const uint qt_meta_data_SiemensPAC2200ModbusTcpConnection[] = {

 // content:
       8,       // revision
       0,       // classname
       0,    0, // classinfo
      30,   14, // methods
       0,    0, // properties
       1,  250, // enums/sets
       0,    0, // constructors
       0,       // flags
      30,       // signalCount

 // signals: name, argc, parameters, tag, flags
       1,    1,  164,    2, 0x06 /* Public */,
       4,    0,  167,    2, 0x06 /* Public */,
       5,    1,  168,    2, 0x06 /* Public */,
       7,    1,  171,    2, 0x06 /* Public */,
       9,    0,  174,    2, 0x06 /* Public */,
      10,    1,  175,    2, 0x06 /* Public */,
      13,    1,  178,    2, 0x06 /* Public */,
      15,    1,  181,    2, 0x06 /* Public */,
      16,    1,  184,    2, 0x06 /* Public */,
      18,    1,  187,    2, 0x06 /* Public */,
      19,    1,  190,    2, 0x06 /* Public */,
      21,    1,  193,    2, 0x06 /* Public */,
      22,    1,  196,    2, 0x06 /* Public */,
      24,    1,  199,    2, 0x06 /* Public */,
      25,    1,  202,    2, 0x06 /* Public */,
      27,    1,  205,    2, 0x06 /* Public */,
      28,    1,  208,    2, 0x06 /* Public */,
      30,    1,  211,    2, 0x06 /* Public */,
      31,    1,  214,    2, 0x06 /* Public */,
      33,    1,  217,    2, 0x06 /* Public */,
      34,    1,  220,    2, 0x06 /* Public */,
      36,    1,  223,    2, 0x06 /* Public */,
      37,    1,  226,    2, 0x06 /* Public */,
      39,    1,  229,    2, 0x06 /* Public */,
      40,    1,  232,    2, 0x06 /* Public */,
      42,    1,  235,    2, 0x06 /* Public */,
      43,    1,  238,    2, 0x06 /* Public */,
      45,    1,  241,    2, 0x06 /* Public */,
      46,    1,  244,    2, 0x06 /* Public */,
      48,    1,  247,    2, 0x06 /* Public */,

 // signals: parameters
    QMetaType::Void, QMetaType::Bool,    3,
    QMetaType::Void,
    QMetaType::Void, QMetaType::UInt,    6,
    QMetaType::Void, QMetaType::Bool,    8,
    QMetaType::Void,
    QMetaType::Void, 0x80000000 | 11,   12,
    QMetaType::Void, QMetaType::Float,   14,
    QMetaType::Void, QMetaType::Float,   14,
    QMetaType::Void, QMetaType::Float,   17,
    QMetaType::Void, QMetaType::Float,   17,
    QMetaType::Void, QMetaType::Float,   20,
    QMetaType::Void, QMetaType::Float,   20,
    QMetaType::Void, QMetaType::Float,   23,
    QMetaType::Void, QMetaType::Float,   23,
    QMetaType::Void, QMetaType::Float,   26,
    QMetaType::Void, QMetaType::Float,   26,
    QMetaType::Void, QMetaType::Float,   29,
    QMetaType::Void, QMetaType::Float,   29,
    QMetaType::Void, QMetaType::Float,   32,
    QMetaType::Void, QMetaType::Float,   32,
    QMetaType::Void, QMetaType::Float,   35,
    QMetaType::Void, QMetaType::Float,   35,
    QMetaType::Void, QMetaType::Float,   38,
    QMetaType::Void, QMetaType::Float,   38,
    QMetaType::Void, QMetaType::Float,   41,
    QMetaType::Void, QMetaType::Float,   41,
    QMetaType::Void, QMetaType::Float,   44,
    QMetaType::Void, QMetaType::Float,   44,
    QMetaType::Void, QMetaType::Float,   47,
    QMetaType::Void, QMetaType::Float,   47,

 // enums: name, alias, flags, count, data
      49,   49, 0x0,   12,  255,

 // enum data: key, value
      50, uint(SiemensPAC2200ModbusTcpConnection::RegisterVoltagePhaseA),
      51, uint(SiemensPAC2200ModbusTcpConnection::RegisterVoltagePhaseB),
      52, uint(SiemensPAC2200ModbusTcpConnection::RegisterVoltagePhaseC),
      53, uint(SiemensPAC2200ModbusTcpConnection::RegisterCurrentPhaseA),
      54, uint(SiemensPAC2200ModbusTcpConnection::RegisterCurrentPhaseB),
      55, uint(SiemensPAC2200ModbusTcpConnection::RegisterCurrentPhaseC),
      56, uint(SiemensPAC2200ModbusTcpConnection::RegisterCurrentPowerPhaseA),
      57, uint(SiemensPAC2200ModbusTcpConnection::RegisterCurrentPowerPhaseB),
      58, uint(SiemensPAC2200ModbusTcpConnection::RegisterCurrentPowerPhaseC),
      59, uint(SiemensPAC2200ModbusTcpConnection::RegisterFrequency),
      60, uint(SiemensPAC2200ModbusTcpConnection::RegisterCurrentPower),
      61, uint(SiemensPAC2200ModbusTcpConnection::RegisterTotalEnergyConsumed),

       0        // eod
};

void SiemensPAC2200ModbusTcpConnection::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
{
    if (_c == QMetaObject::InvokeMetaMethod) {
        auto *_t = static_cast<SiemensPAC2200ModbusTcpConnection *>(_o);
        Q_UNUSED(_t)
        switch (_id) {
        case 0: _t->reachableChanged((*reinterpret_cast< bool(*)>(_a[1]))); break;
        case 1: _t->checkReachabilityFailed(); break;
        case 2: _t->checkReachableRetriesChanged((*reinterpret_cast< uint(*)>(_a[1]))); break;
        case 3: _t->initializationFinished((*reinterpret_cast< bool(*)>(_a[1]))); break;
        case 4: _t->updateFinished(); break;
        case 5: _t->endiannessChanged((*reinterpret_cast< ModbusDataUtils::ByteOrder(*)>(_a[1]))); break;
        case 6: _t->currentPowerChanged((*reinterpret_cast< float(*)>(_a[1]))); break;
        case 7: _t->currentPowerReadFinished((*reinterpret_cast< float(*)>(_a[1]))); break;
        case 8: _t->totalEnergyConsumedChanged((*reinterpret_cast< float(*)>(_a[1]))); break;
        case 9: _t->totalEnergyConsumedReadFinished((*reinterpret_cast< float(*)>(_a[1]))); break;
        case 10: _t->frequencyChanged((*reinterpret_cast< float(*)>(_a[1]))); break;
        case 11: _t->frequencyReadFinished((*reinterpret_cast< float(*)>(_a[1]))); break;
        case 12: _t->voltagePhaseAChanged((*reinterpret_cast< float(*)>(_a[1]))); break;
        case 13: _t->voltagePhaseAReadFinished((*reinterpret_cast< float(*)>(_a[1]))); break;
        case 14: _t->voltagePhaseBChanged((*reinterpret_cast< float(*)>(_a[1]))); break;
        case 15: _t->voltagePhaseBReadFinished((*reinterpret_cast< float(*)>(_a[1]))); break;
        case 16: _t->voltagePhaseCChanged((*reinterpret_cast< float(*)>(_a[1]))); break;
        case 17: _t->voltagePhaseCReadFinished((*reinterpret_cast< float(*)>(_a[1]))); break;
        case 18: _t->currentPhaseAChanged((*reinterpret_cast< float(*)>(_a[1]))); break;
        case 19: _t->currentPhaseAReadFinished((*reinterpret_cast< float(*)>(_a[1]))); break;
        case 20: _t->currentPhaseBChanged((*reinterpret_cast< float(*)>(_a[1]))); break;
        case 21: _t->currentPhaseBReadFinished((*reinterpret_cast< float(*)>(_a[1]))); break;
        case 22: _t->currentPhaseCChanged((*reinterpret_cast< float(*)>(_a[1]))); break;
        case 23: _t->currentPhaseCReadFinished((*reinterpret_cast< float(*)>(_a[1]))); break;
        case 24: _t->currentPowerPhaseAChanged((*reinterpret_cast< float(*)>(_a[1]))); break;
        case 25: _t->currentPowerPhaseAReadFinished((*reinterpret_cast< float(*)>(_a[1]))); break;
        case 26: _t->currentPowerPhaseBChanged((*reinterpret_cast< float(*)>(_a[1]))); break;
        case 27: _t->currentPowerPhaseBReadFinished((*reinterpret_cast< float(*)>(_a[1]))); break;
        case 28: _t->currentPowerPhaseCChanged((*reinterpret_cast< float(*)>(_a[1]))); break;
        case 29: _t->currentPowerPhaseCReadFinished((*reinterpret_cast< float(*)>(_a[1]))); break;
        default: ;
        }
    } else if (_c == QMetaObject::IndexOfMethod) {
        int *result = reinterpret_cast<int *>(_a[0]);
        {
            using _t = void (SiemensPAC2200ModbusTcpConnection::*)(bool );
            if (*reinterpret_cast<_t *>(_a[1]) == static_cast<_t>(&SiemensPAC2200ModbusTcpConnection::reachableChanged)) {
                *result = 0;
                return;
            }
        }
        {
            using _t = void (SiemensPAC2200ModbusTcpConnection::*)();
            if (*reinterpret_cast<_t *>(_a[1]) == static_cast<_t>(&SiemensPAC2200ModbusTcpConnection::checkReachabilityFailed)) {
                *result = 1;
                return;
            }
        }
        {
            using _t = void (SiemensPAC2200ModbusTcpConnection::*)(uint );
            if (*reinterpret_cast<_t *>(_a[1]) == static_cast<_t>(&SiemensPAC2200ModbusTcpConnection::checkReachableRetriesChanged)) {
                *result = 2;
                return;
            }
        }
        {
            using _t = void (SiemensPAC2200ModbusTcpConnection::*)(bool );
            if (*reinterpret_cast<_t *>(_a[1]) == static_cast<_t>(&SiemensPAC2200ModbusTcpConnection::initializationFinished)) {
                *result = 3;
                return;
            }
        }
        {
            using _t = void (SiemensPAC2200ModbusTcpConnection::*)();
            if (*reinterpret_cast<_t *>(_a[1]) == static_cast<_t>(&SiemensPAC2200ModbusTcpConnection::updateFinished)) {
                *result = 4;
                return;
            }
        }
        {
            using _t = void (SiemensPAC2200ModbusTcpConnection::*)(ModbusDataUtils::ByteOrder );
            if (*reinterpret_cast<_t *>(_a[1]) == static_cast<_t>(&SiemensPAC2200ModbusTcpConnection::endiannessChanged)) {
                *result = 5;
                return;
            }
        }
        {
            using _t = void (SiemensPAC2200ModbusTcpConnection::*)(float );
            if (*reinterpret_cast<_t *>(_a[1]) == static_cast<_t>(&SiemensPAC2200ModbusTcpConnection::currentPowerChanged)) {
                *result = 6;
                return;
            }
        }
        {
            using _t = void (SiemensPAC2200ModbusTcpConnection::*)(float );
            if (*reinterpret_cast<_t *>(_a[1]) == static_cast<_t>(&SiemensPAC2200ModbusTcpConnection::currentPowerReadFinished)) {
                *result = 7;
                return;
            }
        }
        {
            using _t = void (SiemensPAC2200ModbusTcpConnection::*)(float );
            if (*reinterpret_cast<_t *>(_a[1]) == static_cast<_t>(&SiemensPAC2200ModbusTcpConnection::totalEnergyConsumedChanged)) {
                *result = 8;
                return;
            }
        }
        {
            using _t = void (SiemensPAC2200ModbusTcpConnection::*)(float );
            if (*reinterpret_cast<_t *>(_a[1]) == static_cast<_t>(&SiemensPAC2200ModbusTcpConnection::totalEnergyConsumedReadFinished)) {
                *result = 9;
                return;
            }
        }
        {
            using _t = void (SiemensPAC2200ModbusTcpConnection::*)(float );
            if (*reinterpret_cast<_t *>(_a[1]) == static_cast<_t>(&SiemensPAC2200ModbusTcpConnection::frequencyChanged)) {
                *result = 10;
                return;
            }
        }
        {
            using _t = void (SiemensPAC2200ModbusTcpConnection::*)(float );
            if (*reinterpret_cast<_t *>(_a[1]) == static_cast<_t>(&SiemensPAC2200ModbusTcpConnection::frequencyReadFinished)) {
                *result = 11;
                return;
            }
        }
        {
            using _t = void (SiemensPAC2200ModbusTcpConnection::*)(float );
            if (*reinterpret_cast<_t *>(_a[1]) == static_cast<_t>(&SiemensPAC2200ModbusTcpConnection::voltagePhaseAChanged)) {
                *result = 12;
                return;
            }
        }
        {
            using _t = void (SiemensPAC2200ModbusTcpConnection::*)(float );
            if (*reinterpret_cast<_t *>(_a[1]) == static_cast<_t>(&SiemensPAC2200ModbusTcpConnection::voltagePhaseAReadFinished)) {
                *result = 13;
                return;
            }
        }
        {
            using _t = void (SiemensPAC2200ModbusTcpConnection::*)(float );
            if (*reinterpret_cast<_t *>(_a[1]) == static_cast<_t>(&SiemensPAC2200ModbusTcpConnection::voltagePhaseBChanged)) {
                *result = 14;
                return;
            }
        }
        {
            using _t = void (SiemensPAC2200ModbusTcpConnection::*)(float );
            if (*reinterpret_cast<_t *>(_a[1]) == static_cast<_t>(&SiemensPAC2200ModbusTcpConnection::voltagePhaseBReadFinished)) {
                *result = 15;
                return;
            }
        }
        {
            using _t = void (SiemensPAC2200ModbusTcpConnection::*)(float );
            if (*reinterpret_cast<_t *>(_a[1]) == static_cast<_t>(&SiemensPAC2200ModbusTcpConnection::voltagePhaseCChanged)) {
                *result = 16;
                return;
            }
        }
        {
            using _t = void (SiemensPAC2200ModbusTcpConnection::*)(float );
            if (*reinterpret_cast<_t *>(_a[1]) == static_cast<_t>(&SiemensPAC2200ModbusTcpConnection::voltagePhaseCReadFinished)) {
                *result = 17;
                return;
            }
        }
        {
            using _t = void (SiemensPAC2200ModbusTcpConnection::*)(float );
            if (*reinterpret_cast<_t *>(_a[1]) == static_cast<_t>(&SiemensPAC2200ModbusTcpConnection::currentPhaseAChanged)) {
                *result = 18;
                return;
            }
        }
        {
            using _t = void (SiemensPAC2200ModbusTcpConnection::*)(float );
            if (*reinterpret_cast<_t *>(_a[1]) == static_cast<_t>(&SiemensPAC2200ModbusTcpConnection::currentPhaseAReadFinished)) {
                *result = 19;
                return;
            }
        }
        {
            using _t = void (SiemensPAC2200ModbusTcpConnection::*)(float );
            if (*reinterpret_cast<_t *>(_a[1]) == static_cast<_t>(&SiemensPAC2200ModbusTcpConnection::currentPhaseBChanged)) {
                *result = 20;
                return;
            }
        }
        {
            using _t = void (SiemensPAC2200ModbusTcpConnection::*)(float );
            if (*reinterpret_cast<_t *>(_a[1]) == static_cast<_t>(&SiemensPAC2200ModbusTcpConnection::currentPhaseBReadFinished)) {
                *result = 21;
                return;
            }
        }
        {
            using _t = void (SiemensPAC2200ModbusTcpConnection::*)(float );
            if (*reinterpret_cast<_t *>(_a[1]) == static_cast<_t>(&SiemensPAC2200ModbusTcpConnection::currentPhaseCChanged)) {
                *result = 22;
                return;
            }
        }
        {
            using _t = void (SiemensPAC2200ModbusTcpConnection::*)(float );
            if (*reinterpret_cast<_t *>(_a[1]) == static_cast<_t>(&SiemensPAC2200ModbusTcpConnection::currentPhaseCReadFinished)) {
                *result = 23;
                return;
            }
        }
        {
            using _t = void (SiemensPAC2200ModbusTcpConnection::*)(float );
            if (*reinterpret_cast<_t *>(_a[1]) == static_cast<_t>(&SiemensPAC2200ModbusTcpConnection::currentPowerPhaseAChanged)) {
                *result = 24;
                return;
            }
        }
        {
            using _t = void (SiemensPAC2200ModbusTcpConnection::*)(float );
            if (*reinterpret_cast<_t *>(_a[1]) == static_cast<_t>(&SiemensPAC2200ModbusTcpConnection::currentPowerPhaseAReadFinished)) {
                *result = 25;
                return;
            }
        }
        {
            using _t = void (SiemensPAC2200ModbusTcpConnection::*)(float );
            if (*reinterpret_cast<_t *>(_a[1]) == static_cast<_t>(&SiemensPAC2200ModbusTcpConnection::currentPowerPhaseBChanged)) {
                *result = 26;
                return;
            }
        }
        {
            using _t = void (SiemensPAC2200ModbusTcpConnection::*)(float );
            if (*reinterpret_cast<_t *>(_a[1]) == static_cast<_t>(&SiemensPAC2200ModbusTcpConnection::currentPowerPhaseBReadFinished)) {
                *result = 27;
                return;
            }
        }
        {
            using _t = void (SiemensPAC2200ModbusTcpConnection::*)(float );
            if (*reinterpret_cast<_t *>(_a[1]) == static_cast<_t>(&SiemensPAC2200ModbusTcpConnection::currentPowerPhaseCChanged)) {
                *result = 28;
                return;
            }
        }
        {
            using _t = void (SiemensPAC2200ModbusTcpConnection::*)(float );
            if (*reinterpret_cast<_t *>(_a[1]) == static_cast<_t>(&SiemensPAC2200ModbusTcpConnection::currentPowerPhaseCReadFinished)) {
                *result = 29;
                return;
            }
        }
    }
}

QT_INIT_METAOBJECT const QMetaObject SiemensPAC2200ModbusTcpConnection::staticMetaObject = { {
    QMetaObject::SuperData::link<ModbusTCPMaster::staticMetaObject>(),
    qt_meta_stringdata_SiemensPAC2200ModbusTcpConnection.data,
    qt_meta_data_SiemensPAC2200ModbusTcpConnection,
    qt_static_metacall,
    nullptr,
    nullptr
} };


const QMetaObject *SiemensPAC2200ModbusTcpConnection::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : &staticMetaObject;
}

void *SiemensPAC2200ModbusTcpConnection::qt_metacast(const char *_clname)
{
    if (!_clname) return nullptr;
    if (!strcmp(_clname, qt_meta_stringdata_SiemensPAC2200ModbusTcpConnection.stringdata0))
        return static_cast<void*>(this);
    return ModbusTCPMaster::qt_metacast(_clname);
}

int SiemensPAC2200ModbusTcpConnection::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = ModbusTCPMaster::qt_metacall(_c, _id, _a);
    if (_id < 0)
        return _id;
    if (_c == QMetaObject::InvokeMetaMethod) {
        if (_id < 30)
            qt_static_metacall(this, _c, _id, _a);
        _id -= 30;
    } else if (_c == QMetaObject::RegisterMethodArgumentMetaType) {
        if (_id < 30)
            *reinterpret_cast<int*>(_a[0]) = -1;
        _id -= 30;
    }
    return _id;
}

// SIGNAL 0
void SiemensPAC2200ModbusTcpConnection::reachableChanged(bool _t1)
{
    void *_a[] = { nullptr, const_cast<void*>(reinterpret_cast<const void*>(std::addressof(_t1))) };
    QMetaObject::activate(this, &staticMetaObject, 0, _a);
}

// SIGNAL 1
void SiemensPAC2200ModbusTcpConnection::checkReachabilityFailed()
{
    QMetaObject::activate(this, &staticMetaObject, 1, nullptr);
}

// SIGNAL 2
void SiemensPAC2200ModbusTcpConnection::checkReachableRetriesChanged(uint _t1)
{
    void *_a[] = { nullptr, const_cast<void*>(reinterpret_cast<const void*>(std::addressof(_t1))) };
    QMetaObject::activate(this, &staticMetaObject, 2, _a);
}

// SIGNAL 3
void SiemensPAC2200ModbusTcpConnection::initializationFinished(bool _t1)
{
    void *_a[] = { nullptr, const_cast<void*>(reinterpret_cast<const void*>(std::addressof(_t1))) };
    QMetaObject::activate(this, &staticMetaObject, 3, _a);
}

// SIGNAL 4
void SiemensPAC2200ModbusTcpConnection::updateFinished()
{
    QMetaObject::activate(this, &staticMetaObject, 4, nullptr);
}

// SIGNAL 5
void SiemensPAC2200ModbusTcpConnection::endiannessChanged(ModbusDataUtils::ByteOrder _t1)
{
    void *_a[] = { nullptr, const_cast<void*>(reinterpret_cast<const void*>(std::addressof(_t1))) };
    QMetaObject::activate(this, &staticMetaObject, 5, _a);
}

// SIGNAL 6
void SiemensPAC2200ModbusTcpConnection::currentPowerChanged(float _t1)
{
    void *_a[] = { nullptr, const_cast<void*>(reinterpret_cast<const void*>(std::addressof(_t1))) };
    QMetaObject::activate(this, &staticMetaObject, 6, _a);
}

// SIGNAL 7
void SiemensPAC2200ModbusTcpConnection::currentPowerReadFinished(float _t1)
{
    void *_a[] = { nullptr, const_cast<void*>(reinterpret_cast<const void*>(std::addressof(_t1))) };
    QMetaObject::activate(this, &staticMetaObject, 7, _a);
}

// SIGNAL 8
void SiemensPAC2200ModbusTcpConnection::totalEnergyConsumedChanged(float _t1)
{
    void *_a[] = { nullptr, const_cast<void*>(reinterpret_cast<const void*>(std::addressof(_t1))) };
    QMetaObject::activate(this, &staticMetaObject, 8, _a);
}

// SIGNAL 9
void SiemensPAC2200ModbusTcpConnection::totalEnergyConsumedReadFinished(float _t1)
{
    void *_a[] = { nullptr, const_cast<void*>(reinterpret_cast<const void*>(std::addressof(_t1))) };
    QMetaObject::activate(this, &staticMetaObject, 9, _a);
}

// SIGNAL 10
void SiemensPAC2200ModbusTcpConnection::frequencyChanged(float _t1)
{
    void *_a[] = { nullptr, const_cast<void*>(reinterpret_cast<const void*>(std::addressof(_t1))) };
    QMetaObject::activate(this, &staticMetaObject, 10, _a);
}

// SIGNAL 11
void SiemensPAC2200ModbusTcpConnection::frequencyReadFinished(float _t1)
{
    void *_a[] = { nullptr, const_cast<void*>(reinterpret_cast<const void*>(std::addressof(_t1))) };
    QMetaObject::activate(this, &staticMetaObject, 11, _a);
}

// SIGNAL 12
void SiemensPAC2200ModbusTcpConnection::voltagePhaseAChanged(float _t1)
{
    void *_a[] = { nullptr, const_cast<void*>(reinterpret_cast<const void*>(std::addressof(_t1))) };
    QMetaObject::activate(this, &staticMetaObject, 12, _a);
}

// SIGNAL 13
void SiemensPAC2200ModbusTcpConnection::voltagePhaseAReadFinished(float _t1)
{
    void *_a[] = { nullptr, const_cast<void*>(reinterpret_cast<const void*>(std::addressof(_t1))) };
    QMetaObject::activate(this, &staticMetaObject, 13, _a);
}

// SIGNAL 14
void SiemensPAC2200ModbusTcpConnection::voltagePhaseBChanged(float _t1)
{
    void *_a[] = { nullptr, const_cast<void*>(reinterpret_cast<const void*>(std::addressof(_t1))) };
    QMetaObject::activate(this, &staticMetaObject, 14, _a);
}

// SIGNAL 15
void SiemensPAC2200ModbusTcpConnection::voltagePhaseBReadFinished(float _t1)
{
    void *_a[] = { nullptr, const_cast<void*>(reinterpret_cast<const void*>(std::addressof(_t1))) };
    QMetaObject::activate(this, &staticMetaObject, 15, _a);
}

// SIGNAL 16
void SiemensPAC2200ModbusTcpConnection::voltagePhaseCChanged(float _t1)
{
    void *_a[] = { nullptr, const_cast<void*>(reinterpret_cast<const void*>(std::addressof(_t1))) };
    QMetaObject::activate(this, &staticMetaObject, 16, _a);
}

// SIGNAL 17
void SiemensPAC2200ModbusTcpConnection::voltagePhaseCReadFinished(float _t1)
{
    void *_a[] = { nullptr, const_cast<void*>(reinterpret_cast<const void*>(std::addressof(_t1))) };
    QMetaObject::activate(this, &staticMetaObject, 17, _a);
}

// SIGNAL 18
void SiemensPAC2200ModbusTcpConnection::currentPhaseAChanged(float _t1)
{
    void *_a[] = { nullptr, const_cast<void*>(reinterpret_cast<const void*>(std::addressof(_t1))) };
    QMetaObject::activate(this, &staticMetaObject, 18, _a);
}

// SIGNAL 19
void SiemensPAC2200ModbusTcpConnection::currentPhaseAReadFinished(float _t1)
{
    void *_a[] = { nullptr, const_cast<void*>(reinterpret_cast<const void*>(std::addressof(_t1))) };
    QMetaObject::activate(this, &staticMetaObject, 19, _a);
}

// SIGNAL 20
void SiemensPAC2200ModbusTcpConnection::currentPhaseBChanged(float _t1)
{
    void *_a[] = { nullptr, const_cast<void*>(reinterpret_cast<const void*>(std::addressof(_t1))) };
    QMetaObject::activate(this, &staticMetaObject, 20, _a);
}

// SIGNAL 21
void SiemensPAC2200ModbusTcpConnection::currentPhaseBReadFinished(float _t1)
{
    void *_a[] = { nullptr, const_cast<void*>(reinterpret_cast<const void*>(std::addressof(_t1))) };
    QMetaObject::activate(this, &staticMetaObject, 21, _a);
}

// SIGNAL 22
void SiemensPAC2200ModbusTcpConnection::currentPhaseCChanged(float _t1)
{
    void *_a[] = { nullptr, const_cast<void*>(reinterpret_cast<const void*>(std::addressof(_t1))) };
    QMetaObject::activate(this, &staticMetaObject, 22, _a);
}

// SIGNAL 23
void SiemensPAC2200ModbusTcpConnection::currentPhaseCReadFinished(float _t1)
{
    void *_a[] = { nullptr, const_cast<void*>(reinterpret_cast<const void*>(std::addressof(_t1))) };
    QMetaObject::activate(this, &staticMetaObject, 23, _a);
}

// SIGNAL 24
void SiemensPAC2200ModbusTcpConnection::currentPowerPhaseAChanged(float _t1)
{
    void *_a[] = { nullptr, const_cast<void*>(reinterpret_cast<const void*>(std::addressof(_t1))) };
    QMetaObject::activate(this, &staticMetaObject, 24, _a);
}

// SIGNAL 25
void SiemensPAC2200ModbusTcpConnection::currentPowerPhaseAReadFinished(float _t1)
{
    void *_a[] = { nullptr, const_cast<void*>(reinterpret_cast<const void*>(std::addressof(_t1))) };
    QMetaObject::activate(this, &staticMetaObject, 25, _a);
}

// SIGNAL 26
void SiemensPAC2200ModbusTcpConnection::currentPowerPhaseBChanged(float _t1)
{
    void *_a[] = { nullptr, const_cast<void*>(reinterpret_cast<const void*>(std::addressof(_t1))) };
    QMetaObject::activate(this, &staticMetaObject, 26, _a);
}

// SIGNAL 27
void SiemensPAC2200ModbusTcpConnection::currentPowerPhaseBReadFinished(float _t1)
{
    void *_a[] = { nullptr, const_cast<void*>(reinterpret_cast<const void*>(std::addressof(_t1))) };
    QMetaObject::activate(this, &staticMetaObject, 27, _a);
}

// SIGNAL 28
void SiemensPAC2200ModbusTcpConnection::currentPowerPhaseCChanged(float _t1)
{
    void *_a[] = { nullptr, const_cast<void*>(reinterpret_cast<const void*>(std::addressof(_t1))) };
    QMetaObject::activate(this, &staticMetaObject, 28, _a);
}

// SIGNAL 29
void SiemensPAC2200ModbusTcpConnection::currentPowerPhaseCReadFinished(float _t1)
{
    void *_a[] = { nullptr, const_cast<void*>(reinterpret_cast<const void*>(std::addressof(_t1))) };
    QMetaObject::activate(this, &staticMetaObject, 29, _a);
}
QT_WARNING_POP
QT_END_MOC_NAMESPACE
